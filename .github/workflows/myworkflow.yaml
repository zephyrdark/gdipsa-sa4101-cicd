# workflow
name: Build and Push

# trigger
on:
  push:
    branches: ['release/v[0-9]+.[0-9]+']

# jobs
jobs:

  # name of job
  checkout-and-scan:

    # runner
    runs-on: ubuntu-latest

    # condition for not running pipeline if commit message starts with #NORUN.
    if: ${{ !startsWith(github.event.head_commit.message, '#NORUN') }}

    # steps in this job
    steps:
    
    # 0a. checkout-code
    - name: Checkout code
      uses: actions/checkout@v4

    # 1. scan-code-for-vulnerabilities
    - name: Aqua Security Trivy
      uses: aquasecurity/trivy-action@0.19.0
      with:
        scan-type: 'fs'
        ignore-unfixed: true
        format: 'table'
        severity: 'CRITICAL'  
        output: trivy-report.txt

    # set env var on trivy-report.txt produced status
    - name: Check if trivy report was produced
      run: |
        if [ -f trivy-report.txt ]; then echo "TRIVY_REPORT_PRODUCED='true'" >> $GITHUB_ENV
        if [! -f trivy-report.txt ]; then echo "TRIVY_REPORT_PRODUCED='false'" >> $GITHUB_ENV

  # name of job
  detected-vulnerabilities-notify-slack:

    env:
      TRIVY_REPORT_PRODUCED: $TRIVY_REPORT_PRODUCED

    # runner
    runs-on: ubuntu-latest

    # condition for not running pipeline if commit message starts with #NORUN.
    if: ${{ env.TRIVY_REPORT_PRODUCED == 'true' }}

    # steps in this job
    steps:
    
    # 1a1. send report to slack // tested and it works to send notification to slack. to study how to customise it.
    - name: Slack Notification
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_TEST_SUBMISSION }}
        SLACK_TITLE: Scan failed - ${{ github.actor }} 
        SLACK_MESSAGE: 'Failed trivy scan, see uploaded report'

    # 1a2. upload file to slack
    - name: slack upload file
      uses: MeilCli/slack-upload-file@v4.0.6
      with:
        slack_token: ${{ secrets.SLACK_TOKEN_TEST_SUBMISSION }}
        channel_id: ${{ secrets.SLACK_CHANNEL_ID_TEST_SUBMISSION }}
        file_path: 'trivy-report.txt'
        initial_comment: 'Scan report by ${{ github.actor }}'

  # 0b. build-image-from-Dockerfile
    # - name: Build image from github commit
    #   run: |
    #      docker build ${{ github.repositoryUrl }}#${{ github.ref }}:${{ github.sha }}

  # 2. containerise-golang-application

  # 3. push-image-to-docker-hub

  # 4. digitally-sign-the-image

  # 5. send-notification-to-slack
