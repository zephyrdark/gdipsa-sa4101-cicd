# workflow
name: Build and Push

# trigger
on:
  push:
    branches: ['release/v[0-9]+.[0-9]+']

jobs:

  # name of jobs
  vulnerability-scan:
    runs-on: ubuntu-latest
    # condition for not running pipeline if commit message starts with #NORUN.
    if: ${{ !startsWith(github.event.head_commit.message, '#NORUN') }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # 1. scan-code-for-vulnerabilities
    - name: Aqua Security Trivy
      id: step-trivy-scan
      uses: aquasecurity/trivy-action@0.19.0
      with:
        scan-type: 'fs'
        ignore-unfixed: true
        format: 'table'
        severity: ${{ vars.TRIVY_SEVERITY_TEST_SUBMISSION }} # check repo for current severity. CRITICAL.
        output: trivy-report.txt
        exit-code: '1'
      continue-on-error: true

    # 1a. VULNERABILITY DETECTED - send report to slack // tested and it works to send notification to slack.
    - name: VULNERABILITY DETECTED - Slack Notification
      if: steps.step-trivy-scan.outcome == 'failure' && steps.step-trivy-scan.conclusion == 'success'
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_TEST_SUBMISSION }}
        SLACK_TITLE: Scan failed - ${{ secrets.AUTHOR_NAME }} 
        SLACK_MESSAGE: 'Failed trivy scan, see uploaded report'

    # 1b. VULNERABILITY DETECTED - upload file to slack
    - name: VULNERABILITY DETECTED - Slack Upload File
      if: steps.step-trivy-scan.outcome == 'failure' && steps.step-trivy-scan.conclusion == 'success'
      uses: MeilCli/slack-upload-file@v4.0.6
      with:
        slack_token: ${{ secrets.SLACK_TOKEN_TEST_SUBMISSION }}
        channel_id: ${{ secrets.SLACK_CHANNEL_ID_TEST_SUBMISSION }}
        file_path: 'trivy-report.txt'
        initial_comment: 'Scan report by ${{ secrets.AUTHOR_NAME }}'

    # 1c. VULNERABILITY DETECTED - terminate workflow
    - name: Cancel this build
      if: steps.step-trivy-scan.outcome == 'failure' && steps.step-trivy-scan.conclusion == 'success'
      uses: andymckay/cancel-action@0.4

    # 2. NO VULNERABILITY - proceed to build and push container
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3.0.0

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3.3.0

    - name: Login to Docker Hub
      uses: docker/login-action@v3.1.0
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker images
      uses: docker/build-push-action@v5.3.0
      with:
        context: ./go-fortune
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/go-fortune:${{ github.sha }}
            
    # x. Send success notification to Slack
    - name: Slack notification - Workflow successful run
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_TEST_SUBMISSION }}
        SLACK_TITLE: Image built and signed // not really
        SLACK_MESSAGE: "*Name:* ${{ secrets.AUTHOR_NAME }}\n*Matriculation:* ${{ secrets.AUTHOR_MATRI_NO }}\n*Email:* ${{ secrets.AUTHOR_EMAIL }}\n*Git:* https://github.com/${{ github.repository }}\n*Image:* wip"

  # 0b. build-image-from-Dockerfile
    # - name: Build image from github commit
    #   run: |
    #      docker build ${{ github.repositoryUrl }}#${{ github.ref }}:${{ github.sha }}

  # 2. containerise-golang-application

  # 3. push-image-to-docker-hub

  # 4. digitally-sign-the-image

  # 5. send-notification-to-slack
